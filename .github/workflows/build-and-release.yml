name: Build and Release
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "docs/**"
      - ".github/workflows/update-docs.yml"
      - "mkdocs.yml"

env:
  NO_PROGRESS: 1
  SERVER_REPO_PATH: ${{secrets.SERVER_REPO_PATH}}
  SERVER_REPO_URL: ${{secrets.SERVER_REPO_URL}}
  CACHE_PATH: ${{secrets.SERVER_REPO_PATH}}
  OSTREE_REPO: ${{secrets.OSTREE_REPO}}
  OSTREE_GPG: ${{secrets.OSTREE_GPG}}
  VERSION: ${{ github.run_number }}
  SOURCEFORGE_PREFIX: ${{secrets.SOURCEFORGE_PREFIX}}
  CHANNEL: ${{ endsWith(github.ref, 'stable') && 'stable' || (endsWith(github.ref, 'preview') && 'preview' || 'unstable') }}
  OSTREE_BRANCH: "x86_64/os/${{ endsWith(github.ref, 'stable') && 'stable' || (endsWith(github.ref, 'preview') && 'preview' || 'unstable') }}"

jobs:
  build:
    name: Build Collection
    runs-on: self-hosted
    timeout-minutes: 47000

    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - name: Build system packages
        run: make ELEMENT=system/deps.yml

      - name: Write changelog
        run: echo "${{ github.event.head_commit.message }}" > ChangeLog

      - name: Update Ostree
        run: make ELEMENT=system/repo.yml update-ostree

      - name: Update Extensions
        run: |
          for extension_path in elements/extensions/*.yml; do
            extension_path="$(echo ${extension_path} | cut -d '/' -f2-)"
            extension="$(basename ${extension_path})"
            extension="${extension%.*}"
            OSTREE_BRANCH="x86_64/extension/${extension}/${CHANNEL}" \
            ELEMENT=${extension_path} make update-ostree
          done

      - name: Build AppImages
        run: make ELEMENT=app-market.yml

      - name: Build Installer ISO
        run: make ELEMENT=installer/image.yml

  build-installer-iso:
    name: Build Installer ISO
    runs-on: self-hosted
    timeout-minutes: 47000
    needs: [ build ]

    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - name: Update installer ISO
        run: |
          make checkout ELEMENT=installer/image.yml DESTDIR=${SERVER_REPO_PATH}/releases/${CHANNEL}/
          (cd ${SERVER_REPO_PATH}/releases/${CHANNEL}/; zsyncmake -b 2048 -C -u ${SERVER_REPO_URL}/releases/${CHANNEL}/rlxos-${CHANNEL}-installer.iso rlxos-${CHANNEL}-installer.iso)

  update-mirrors:
    name: Update ISO on mirrors
    runs-on: self-hosted
    environment: deploy
    needs: [build-installer-iso]
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - name: Upload to sourceforge
        run: |
          scp -pr ${SERVER_REPO_PATH}/releases/${CHANNEL}/ ${SOURCEFORGE_PREFIX}/

  update-market:
    name: Update Market
    runs-on: self-hosted
    needs: [ build-installer-iso ]
    if: github.ref == 'refs/heads/stable'
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true
      - name: Generate AppImages meta
        run: make update-app-market MARKET_PATH="${SERVER_REPO_PATH}/${CHANNEL}"