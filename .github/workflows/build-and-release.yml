name: Build and Release
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "docs/**"

env:
  NO_PRINT_PROGRESS: 1
  SERVER_REPO_PATH: ${{secrets.SERVER_REPO_PATH}}
  SERVER_REPO_URL: ${{secrets.SERVER_REPO_URL}}
  OSTREE_REPO: ${{secrets.OSTREE_REPO}}
  OSTREE_GPG: ${{secrets.OSTREE_GPG}}

jobs:
  build:
    name: Build Collection
    runs-on: self-hosted
    timeout-minutes: 47000

    steps:
      - uses: actions/checkout@v1

      - name: Configure Version
        run: |
          VERSION="${GITHUB_REF#refs/*/}"
          if [ $VERSION != "stable" ] && [ $VERSION != "preview" ] ; then
            VERSION="unstable"
          fi
          cat > version.yml << EOF
          version: ${VERSION}
          ostree-branch: "x86_64/os/${VERSION}"
          EOF

          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build system packages
        run: |
          pkgupd ignite build system/deps.yml
      
      - name: Update Ostree
        run: |
          echo "${{ github.event.head_commit.message }}" > commit_message

          OSTREE_BRANCH="x86_64/os/${VERSION}" BUILD_ID="${{ github.run_number }}" make update-ostree

      - name: Update Extensions
        run: |
          for extension_path in elements/extensions/*.yml; do
            extension_path="$(echo ${extension_path} | cut -d '/' -f2-)"
            extension="$(basename ${extension_path})"
            extension="${extension%.*}"
            OSTREE_BRANCH="x86_64/extension/${ext}/${VERSION}" \
            ELEMENT_FILE=extensions/${ext}.yml make update-ostree
          done

      - name: Build AppImages
        run: |
          pkgupd ignite build app-market.yml
      
      - name: Build Installer ISO
        run: pkgupd ignite build installer/ostree.yml

  build-installer-iso:
    name: Build Installer ISO
    runs-on: self-hosted
    timeout-minutes: 47000
    environment: deploy
    needs: [build]
    if: github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v1

      - name: Configure Version
        run: |
          VERSION="${GITHUB_REF#refs/*/}"
          if [ $VERSION != "stable" ] && [ $VERSION != "staging" ] ; then
            VERSION="experimental"
          fi
          cat > version.yml << EOF
          version: ${VERSION}
          ostree-branch: "x86_64/os/${VERSION}"
          EOF

          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Update installer ISO
        run: |
          pkgupd ignite checkout installer/ostree.yml ${SERVER_REPO_PATH}/releases/${VERSION}/ostree
          (cd ${SERVER_REPO_PATH}/releases/${VERSION}/ostree/; zsyncmake -b 2048 -C -u ${SERVER_REPO_URL}/releases/${VERSION}/ostree/rlxos-${VERSION}-ostree-installer.iso rlxos-${VERSION}-ostree-installer.iso)

  update-market:
    name: Update Market
    runs-on: self-hosted
    needs: [build-installer-iso]
    if: github.ref == 'refs/heads/stable'
    steps:
      - uses: actions/checkout@v1
      - name: Configure Version
        run: |
          VERSION="${GITHUB_REF#refs/*/}"
          if [ $VERSION != "stable" ] && [ $VERSION != "staging" ] ; then
            VERSION="experimental"
          fi
          cat > version.yml << EOF
          version: ${VERSION}
          ostree-branch: "x86_64/os/${VERSION}"
          EOF

          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Generate AppImages meta
        run: |-
          pkgupd ignite meta ${SERVER_REPO_PATH}/${VERSION}

      - name: Extract icons
        run: ./scripts/extract-icons.sh ${SERVER_REPO_PATH}/apps/ ${SERVER_REPO_PATH}/icons/
