name: Build and Release
on:
  push:
    paths-ignore:
      - "docs/**"

env:
  NO_PRINT_PROGRESS: 1
  SERVER_REPO_PATH: ${{secrets.SERVER_REPO_PATH}}
  SERVER_REPO_URL: ${{secrets.SERVER_REPO_URL}}
  OSTREE_REPO: ${{secrets.OSTREE_REPO}}
  OSTREE_GPG: ${{secrets.OSTREE_GPG}}

jobs:
  build-collection:
    name: Build Collection
    runs-on: self-hosted
    timeout-minutes: 47000
    strategy:
      matrix:
        collection:
          - core
          - xfce4

    steps:
      - uses: actions/checkout@v1

      - name: Generate Installer
        run: |
          pkgupd ignite build collections/${{matrix.collection}}.yml

  update-ostree:
    name: Update OStree
    runs-on: self-hosted
    timeout-minutes: 47000
    needs: build-collection
    steps:
      - uses: actions/checkout@v1
      - run: |
          pkgupd ignite build system/ostree-config.yml
          echo "${{ github.event.head_commit.message }}" > commit_body
          VERSION=$(cat version.yml | grep "^version:" | awk '{print $2}')
          OSTREE_BRANCH="x86_64/os/${VERSION}" make update-ostree

  build-installer-iso:
    name: Build Installer ISO
    runs-on: self-hosted
    timeout-minutes: 47000
    environment: deploy
    needs: [update-ostree]
    strategy:
      matrix:
        variant: 
          - pkgupd
          - ostree
    steps:
      - uses: actions/checkout@v1

      - name: Build Installer ISO
        run: pkgupd ignite build installer/${{matrix.variant}}.yml

      - name: Update installer ISO
        run: |
          VERSION=$(cat version.yml | grep "^version:" | awk '{print $2}')
          pkgupd ignite checkout installer/${{matrix.variant}}.yml ${SERVER_REPO_PATH}/releases/${VERSION}/${{matrix.variant}}
          (cd ${SERVER_REPO_PATH}/releases/${VERSION}/${{matrix.variant}}/; zsyncmake -b 2048 -C -u ${SERVER_REPO_URL}/releases/${VERSION}/${{matrix.variant}}/rlxos-${VERSION}-${{matrix.variant}}-installer.iso rlxos-${VERSION}-${{matrix.variant}}-installer.iso)

  update-market:
    name: Update Market
    runs-on: self-hosted
    needs: [build-installer-iso]
    if: github.ref == 'refs/heads/stable'
    steps:
      - uses: actions/checkout@v1
      - name: Build registered AppImages
        run: |-
          VERSION=$(cat version.yml | grep "^version:" | awk '{print $2}')
          pkgupd ignite meta ${SERVER_REPO_PATH}/${VERSION}

      - name: Extract icons
        run: ./scripts/extract-icons.sh ${SERVER_REPO_PATH}/apps/ ${SERVER_REPO_PATH}/icons/