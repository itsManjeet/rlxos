id: desktop-shell
version: 0.1.2
about: Desktop shell for rlxos

merge:
  - elements/include/theme.inc

depends:
  - components/swayfx.yml
  - components/swaybg.yml
  - components/swayidle.yml
  - components/swaylock.yml
  - components/cage.yml
  
  - components/greetd.yml
  - components/wlgreet.yml
  
  - components/i3blocks.yml
  - components/rofi.yml
  - components/foot.yml
  - components/brightnessctl.yml
  - components/pipewire.yml
  - components/pamixer.yml
  - components/mako.yml
  - components/playerctl.yml
  - components/iio-sway.yml
  - components/psmisc.yml
  - components/wvkbd.yml
  - components/wob.yml
  - components/grimshot.yml

  - components/fonts/ibm-plex.yml
  - components/fonts/noto.yml
  - components/fonts/noto-cjk.yml
  - components/fonts/noto-emoji.yml
  - components/fonts/adobe-source-code-pro-fonts.yml

  - components/themes/adwaita-icon-theme.yml
  - components/themes/qogir-icon-theme.yml
  - components/themes/qogir-gtk-theme.yml


script: |-
  install -v -D -m 0755 /dev/stdin %{install-root}%{libdir}/systemd/systemd-preset << "EOF"
  enable greetd
  EOF

  install -v -D -m 0755 /dev/stdin %{install-root}%{sysconfdir}/greetd/config.toml << "EOF"
  [terminal]
  vt = 1

  [default_session]
  command = "cage -- /Applications/initial-setup.app"
  user = "initial-setup"
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/wob/wob.ini << "EOF"
  bar_color = B1B2FFDD
  background_color = EEF1FF
  border_color = AAC4FF
  border_size = 1
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/greetd/sway-config << "EOF"
  exec "wlgreet --command sway; swaymsg exit"
  bindsym Mod4+shift+e exec swaynag \
    -t warning \
    -m "What do you want to do?" \
    -b "Poweroff" "systemctl poweroff" \
    -b "Reboot" "systemctl reboot"

  output * bg %{datadir}/backgrounds/default_blur.jpg fill

  include /etc/sway/config.d/*
  EOF

  install -v -D -m 0644 /files/backgrounds/default.jpg %{install-root}%{datadir}/backgrounds/default.jpg
  install -v -D -m 0644 /files/backgrounds/default_blur.jpg %{install-root}%{datadir}/backgrounds/default_blur.jpg

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/gtk-3.0/settings.ini << "EOF"
  [Settings]
  gtk-icon-theme-name = Qogir
  gtk-theme-name = Qogir-Light
  gtk-font-name = %{font_theme}
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/swaynag/config << "EOF"
  font=%{font_theme}
  dismiss-button=x

  background=%{background_secondary_color}
  border=%{border_color}
  text=%{foreground_secondary_color}
  button-background=%{background_color}

  message-padding=10
  button-padding=10

  button-border-size=1
  details-border-size=1
  border-bottom-size=1

  [warning]
  background=#EBEDD1
  border=#F9E154
  button-background=#EFEF8D
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/sway/config << "EOF"
  set $mod Mod4

  set $left h
  set $down j
  set $up k
  set $right l

  set $term foot

  set $background %{background_color}
  set $background_secondary %{background_secondary_color}
  set $foreground %{foreground_color}
  set $foreground_secondary %{foreground_secondary_color}
  set $border %{border_color}
  set $highlight %{highlight_color}
  set $font "IBM Plex Sans 12"

  set $menu 'rofi -modi run,drun,window -show drun'

  set $background_image /usr/share/backgrounds/default.jpg
  set $background_blur_image /usr/share/backgrounds/default_blur.jpg

  set $lock swaylock -f

  titlebar_border_thickness 2
  titlebar_padding 5
  title_align center

  font pango: IBM Plex Sans Regular 11
  # class                 border                 background             foreground               indicator  child_border
  client.focused          $background            $background            $foreground             $highlight  $border
  client.focused_inactive $background_secondary  $background_secondary  $foreground_secondary   $highlight  $background_secondary
  client.unfocused        $background_secondary  $background_secondary  $foreground_secondary   $highlight  $background_secondary
  client.urgent           $background_secondary  $background_secondary  $foreground_secondary   $highlight  $background_secondary
  client.placeholder      $background_secondary  $background_secondary  $foreground_secondary   $highlight  $background_secondary

  blur on
  blur_xray off
  blur_passes 2
  blur_radius 5

  shadows on
  shadows_on_csd on
  shadow_blur_radius 20
  shadow_color #0000007F

  # inactive window fade amount. 0.0 = no dimming, 1.0 = fully dimmed
  default_dim_inactive 0.0
  dim_inactive_colors.unfocused #000000AA
  dim_inactive_colors.urgent #900000AA

  # Move minimized windows into Scratchpad (enable|disable)
  scratchpad_minimize enable

  default_border pixel 3
  output * bg $background_image fill
  
  bindswitch --reload --locked lid:on output * disable
  bindswitch --reload --locked lid:off output * enable

  exec $lock

  set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

  seat seat0 xcursor_theme Qogir 24

  exec swayidle -w \
          timeout 300 '$lock' \
          timeout 600 'swaymsg "output * dpms off"' \
               resume 'swaymsg "output * dpms on"' \
          before-sleep '$lock'

  bindswitch tablet:on exec %{bindir}/tablet-mode on
  bindswitch tablet:off exec %{bindir}/tablet-mode off

  # Start a terminal
  bindsym $mod+Return exec $term

  # Kill focused window
  bindsym $mod+Shift+q kill

  # Start your launcher
  bindsym $mod+d exec $menu

  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal

  # Reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag \
           -m 'System Menu' \
           -b 'Logout' 'swaymsg exit' \
           -b 'Sleep' 'systemctl suspend' \
           -b 'Shutdown' 'systemctl poweroff' \
           -b 'Restart' 'systemctl reboot'

  # Move your focus around
  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move the focused window with the same, but add Shift
  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
  # Ditto, with arrow keys
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right
  
  #
  # Workspaces:
  #
  # Switch to workspace
  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+4 workspace number 4
  bindsym $mod+5 workspace number 5
  bindsym $mod+6 workspace number 6
  bindsym $mod+7 workspace number 7
  bindsym $mod+8 workspace number 8
  bindsym $mod+9 workspace number 9
  bindsym $mod+0 workspace number 10
  # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
  
  #
  # Layout stuff:
  #
  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv

  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle

  bindsym $mod+a exec ApplicationLauncher
  bindgesture swipe:3:up exec ApplicationLauncher

  bindgesture swipe:3:right workspace prev
  bindgesture swipe:3:left workspace next
  
  # Audio
  bindsym XF86AudioMute pactl set-sink-mute `pactl list sinks short | grep -E 'RUNNING|IDLE' | awk '{print $1}'` toggle
  bindsym XF86AudioRaiseVolume exec pamixer -ui 5 && pamixer --get-volume > $WOBSOCK
  bindsym XF86AudioLowerVolume exec pamixer -ud 5 && pamixer --get-volume > $WOBSOCK

  # Media
  bindsym XF86AudioPrev exec playerctl previous
  bindsym XF86AudioPlay exec playerctl play-pause
  bindsym XF86AudioNext exec playerctl next

  # Backlight
  bindsym XF86MonBrightnessUp exec brightnessctl s +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
  bindsym XF86MonBrightnessDown exec brightnessctl s 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

  # Screenshot
  bindsym Print exec grimshot save screen ~/Pictures/$(date '+%Y-%m-%d-%T')-screenshot.png
  bindsym Shift+Print exec grimshot save area ~/Pictures/$(date '+%Y-%m-%d-%T')-screenshot.png

  input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
    natural_scroll enabled
  }

  #
  # Scratchpad:
  #
  # Sway has a "scratchpad", which is a bag of holding for windows.
  # You can send windows there and get them back later.

  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show
  #
  # Resizing containers:
  #
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 10px
      bindsym $down resize grow height 10px
      bindsym $up resize shrink height 10px
      bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"

  #
  # Status Bar:
  #
  # Read `man 5 sway-bar` for more information about this section.
  bar {
      position top

      # When the status_command prints a new line to stdout, swaybar updates.
      # The default just shows the current date and time.
      status_command while /usr/bin/swaybar-status_command; do sleep 1; done

      colors {
          statusline $foreground
          background $background
          focused_workspace $background_secondary $background_secondary $foreground_secondary
          active_workspace $background_secondary $background_secondary $foreground_secondary
          inactive_workspace $background $background $foreground
      }
  }

  include /etc/sway/config.d/*
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/sway/config.d/gtk-themes << "EOF"
  set $schema org.gnome.desktop.interface
  exec_always {
    gsettings set org.gtk.Settings.FileChooser window-size "(1000, 500)"
    gsettings set $schema gtk-theme "Qogir-Light"
    gsettings set $schema.wm.preferences theme "Qogir-Light"
    gsettings set $schema icon-theme "Qogir"
    gsettings set $schema cursor-theme "Qogir"
    gsettings set $schema font-name "%{font_theme}"
  }
  EOF

  install -v -D -m 0755 /dev/stdin %{install-root}%{bindir}/swaybar-status_command << "EOF"
  # Change this according to your device
  ################
  # Variables
  ################

  # Keyboard input name
  keyboard_input_name="1:1:AT_Translated_Set_2_keyboard"

  # Date and time
  date_and_week=$(date "+%Y/%m/%d (w%-V)")
  current_time=$(date "+%H:%M")

  #############
  # Commands
  #############

  # Battery or charger
  battery_charge=$(upower --show-info $(upower --enumerate | grep 'BAT') | egrep "percentage" | awk '{print $2}')
  battery_status=$(upower --show-info $(upower --enumerate | grep 'BAT') | egrep "state" | awk '{print $2}')

  # Audio and multimedia
  audio_volume=$(pamixer --sink `pactl list sinks short | grep -E 'RUNNING|IDLE' | awk '{print $1}'` --get-volume)
  audio_is_muted=$(pamixer --sink `pactl list sinks short | grep -E 'RUNNING|IDLE' | awk '{print $1}'` --get-mute)

  # Network
  network=$(ip route get 1.1.1.1 | grep -Po '(?<=dev\s)\w+' | cut -f1 -d ' ')
  # interface_easyname grabs the "old" interface name before systemd renamed it
  interface_easyname=$(dmesg | grep $network | grep renamed | awk 'NF>1{print $NF}')
  ping=$(ping -c 1 www.google.es | tail -1| awk '{print $4}' | cut -d '/' -f 2 | cut -d '.' -f 1)

  # Others
  language=$(swaymsg -r -t get_inputs | awk '/1:1:AT_Translated_Set_2_keyboard/;/xkb_active_layout_name/' | grep -A1 '\b1:1:AT_Translated_Set_2_keyboard\b' | grep "xkb_active_layout_name" | awk -F '"' '{print $4}')
  loadavg_5min=$(cat /proc/loadavg | awk -F ' ' '{print $2}')

  if [ $battery_status = "discharging" ];
  then
      battery_pluggedin='🔋'
  else
      battery_pluggedin='⚡'
  fi

  if ! [ $network ]
  then
     network_active="⛔"
  else
     network_active="⇆"
  fi

  if [ $audio_is_muted = "true" ]
  then
      audio_active='🔇'
  else
      audio_active='🔊'
  fi

  POWER_CACHE="/tmp/power_notification"

  charge_num=$(echo $battery_charge | sed 's#%##g')

  update_power_cache() {
    echo "$(date +%s) $charge_num" > $POWER_CACHE
  }

  if [ $battery_status == "discharging" ] ; then
    if [ ! -f $POWER_CACHE ] && [ $charge_num -lt 10 ] ; then
      notify-send "Low power" "System Power is running low ($charge_num)" 2>/dev/null
      update_power_cache

    else

      last_date="$(cat $POWER_CACHE | awk '{print $1}')"
      last_charge="$(cat $POWER_CACHE | awk '{print $1}')"
      cur_date="$(date +%s)"
      delta_time=$((last_date - cur_date))

      if [ $delta_time -gt 600000 ] ; then
        if [ $last_charge -lt 5 ] ; then
          notify-send "Critical battery level ($charge_num)" "Shutting Down in 20sec" 2>/dev/null
          sleep 20
          systemctl suspend-then-hibernate
        else
          update_power_cache
        fi
      fi
    fi
  fi

  echo "  ⌨ $language | $network_active $interface_easyname ($ping ms) | 🏋 $loadavg_5min | $audio_active $audio_volume% | $battery_pluggedin $battery_charge | $date_and_week 🕘 $current_time  "
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/swaylock/config << "EOF"
  image="%{datadir}/backgrounds/default_blur.jpg"
  scaling=fill

  indicator-caps-lock
  indicator-idle-visible
  indicator-thickness=4
  
  # inside-color=%{background_color}
  # inside-clear-color=%{background_color}
  # inside-caps-lock-color=%{highlight_color}
  # inside-ver-color=%{background_secondary_color}
  
  # key-hl-color=%{highlight_color}

  # layout-bg-color=%{background_color}
  # layout-bg-color=%{background_color}
  # layout-text-color=%{foreground_color}

  # line-color=%{background_color}
  # line-clear-color=%{background_color}
  # line-ver-color=%{background_secondary_color}

  font="%{font_theme}"
  font-size=14

  # line-color=%{border_color}  
  EOF

  install -v -D -m 0644 /dev/stdin %{install-root}%{sysconfdir}/greetd/wlgreet.toml << "EOF"
  command = "sway"
  outputMode = "all"
  scale = 1

  [background]
  red = 0.933
  green = 0.945
  blue = 1.0
  opacity = 0.9

  [headline]
  red = 0.204
  green = 0.298
  blue = 0.392
  opacity = 1.0

  [prompt]
  red = 0.204
  green = 0.298
  blue = 0.392
  opacity = 1.0

  [promptErr]
  red = 0.988
  green = 0.349
  blue = 0.318
  opacity = 1.0

  [border]
  red = 0.694
  green = 0.698
  blue = 1.0
  opacity = 0.0
  EOF

  install -vDm0644 /dev/stdin %{install-root}%{sysconfdir}/xdg/foot/foot.ini << "EOF"
  font=Source Code Pro:size=12
  pad=10x10

  [colors]
  alpha=0.9
  background=EEF1FF
  foreground=334C64
  EOF

  install -vDm0755 /dev/stdin %{install-root}%{bindir}/tablet-mode << "EOF"
  #!/bin/sh
  COMMAND=$1

  if [ -z "$COMMAND" ] ; then
    echo "Usage: $0 <on/off>"
    echo "on or off tablet mode"
    exit 0
  fi

  start_service() {
    local _bin=$1
    shift

    local _pid=$(pidof $_bin)
    if [ -z "$_pid" ] ; then
      echo "Starting $_bin"
      $_bin $@ &
    fi
  }

  stop_service() {
    echo "Stopping $1"
    killall $1
  }

  enable_tablet_mode() {
    start_service iio-sway
    start_service wvkbd-mobintl -alpha 70 -L 300 &
  }

  disable_tablet_mode() {
    stop_service iio-sway
    stop_service wvkbd-mobintl
  }

  case "$COMMAND" in
    "on"|"ON")
      enable_tablet_mode
      ;;
    "off"|"OFF")
      disable_tablet_mode
      ;;
  esac
  EOF

  install -vDm0644 /dev/stdin %{install-root}/%{datadir}/glib-2.0/schemas/10_rlxos-default-settings.gschema.override << "EOF"
  [org.gnome.desktop.interface]
  gtk-theme="Qogir-Light"
  icon-theme="Qogir"
  cursor-theme="Qogir"
  font-name="%{font_theme}"
  monospace-font-name="Source Code Pro 12"
  font-antialiasing = "rgba"
  EOF

  install -vDm0644 /dev/stdin %{install-root}%{datadir}/rofi/fonts/Default.rasi << "EOF"
  font: '%{font_theme}';
  EOF

  install -vDm0644 /dev/stdin %{install-root}%{datadir}/rofi/colors/DefaultLight.rasi << "EOF"
  * {
    background-color: %{background_color};
    background-secondary-color: %{background_secondary_color};
    background-selected-color: %{background_selected_color};

    foreground-color: %{foreground_color};
    foreground-secondary-color: %{foreground_secondary_color};
    foreground-selected-color: %{foreground_selected_color};

    border-color: %{border_color};
    highlight-color: %{highlight_color};

    font: '%{font_theme}';
  }
  EOF

  install -vDm0644 /dev/stdin %{install-root}%{datadir}/rofi/applets/ApplicationPrompt-FullScreen.rasi << "EOF"
  * {
    background: transparent;
    foreground-color: @foreground-color;
  }

  window {
  	fullscreen:       true;
    background-color: @background-color;
  	padding:          4em;
  	children:         [ wrap, listview-split ];
  	spacing:          1em;
  }


  /** We add an extra child to this is PREVIEW=true */
  listview-split {
    orientation: horizontal;
    spacing: 0.4em;
    children: [listview];
    scrollbar: true;
    scrollbar-width: 4px;
  }

  scrollbar {
    background-color: @background-secondary-color;
    handle-width: 4px;
    handle-color: @border-color;
    border-color: @border-color;
  }


  wrap {
  	expand: false;
  	orientation: vertical;
  	children: [ inputbar, message ];
  }

  icon-ib {
  	expand: false;
  	filename: "system-search";
  	vertical-align: 0.5;
  	horizontal-align: 0.5;
  	size: 1em;
  }

  inputbar {
  	spacing: 0.4em;
  	padding: 0.4em;
  	children: [ icon-ib, entry ];
  }

  entry {
  	placeholder: "Search";
  	placeholder-color: @foreground-secondary-color;
  }

  message {
  	background-color: red/20%;
  	border-color: lightsalmon;
  	border: 3px 0px 0px 0px;
  	padding: 0.4em;
  	spacing: 0.4em;
  }

  listview {
  	flow: horizontal;
  	fixed-columns: true;
  	columns: 7;
  	lines: 5;
  	spacing: 1.0em;
  }

  element {
  	orientation: vertical;
  	padding: 0.1em;

    children: [element-icon, element-text ];
  }

  element-icon {
  	size: calc(((100% - 8em) / 7 ));
  	horizontal-align: 0.5;
  	vertical-align: 0.5;
  }

  element-text {
  	horizontal-align: 0.5;
  	vertical-align: 0.5;
    padding: 0.2em;
  }

  element selected {
    background-color: @background-selected-color;
  	border-color: @border-color;
  	border: 3px;
  }

  /**
   * Launching rofi with environment PREVIEW set to true
   * will split the screen and show a preview widget.
   */
  @media ( enabled: env(PREVIEW, false)) {
    /** preview widget */
    icon-current-entry {
      expand:          true;
      size:            80%;
    }
    listview-split {
      children: [listview, icon-current-entry];
    }
    listview {
    columns: 4;
    }

  }

  @media ( enabled: env(NO_IMAGE, false)) {
  	listview {
  		columns: 1;
  		spacing: 0.4em;
  	}
  	element {
  		children: [ element-text ];
  	}
  	element-text {
  		horizontal-align: 0.0;
  	}
  }

  EOF

  install -vDm0644 /dev/stdin %{install-root}%{datadir}/rofi/themes/ApplicationPrompt-FullScreen-DefaultLight.rasi << "EOF"
  include '../colors/DefaultLight.rasi'
  include '../fonts/Default.rasi'
  include '../applets/ApplicationPrompt-FullScreen.rasi'
  EOF

  install -vDm0755 /dev/stdin %{install-root}%{libdir}/PromptProvider << "EOF"
  [ -e %{sysconfdir}/prompt.conf ] && . %{sysconfdir}/prompt.conf
  COLOR_SCHEME=${COLOR_SCHEME:-'DefaultLight'}

  ApplicationPrompt() {
    exec rofi -show drun -theme ApplicationPrompt-FullScreen-${COLOR_SCHEME}
  }

  #
  # MenuPrompt <PROMPT> <MESSAGE>
  # STDIN  : Menu List Provider
  # STDOUT : Selected Output
  MenuPrompt() {
    local _prompt="$1"
    local _message="$2"
    shift; shift
    [ -z $_message ] && echo "Usage: MenuPrompt <PROMPT> <MESSAGE> <Args...>"
    rofi -dmenu -p "$1" -mesg "$2" $@
  }

  #
  # ConfirmPrompt <Message>
  ConfirmPrompt() {
    local _message="$1"
    shift
    [ -z $_message ] && echo "Usage: ConfirmPrompt <Message> <Args...>"
    local _selected=$(echo -e "yes\nno" | MenuPrompt 'Confirmation' "$_message")
    if [ $_selected == 'yes' ] ; then
      return 1
    fi
    return 0
  }
  EOF

  install -vDm0755 /dev/stdin %{install-root}%{bindir}/ApplicationLauncher << "EOF"
  #!/bin/sh
  source %{libdir}/PromptProvider

  ApplicationPrompt
  EOF

  install -vDm0755 /dev/stdin %{install-root}%{bindir}/Powermenu << "EOF"
  #!/bin/sh
  source %{libdir}/PromptProvider

  OPTIONS="Logout Suspend Hibernate Reboot Shutdown"

  selected=$(echo "$OPTIONS" | tr ' ' '\n' | MenuPrompt "$(hostname)" "$(Uptime: `uptime -p | sed -e 's/up //g`)")
  case $selected in
    Logout)   swaymsg exit ;;
    Suspend)  ConfirmPrompt 'Do you want to suspend your system' && systemctl suspend ;;
    Reboot)   ConfirmPrompt 'Do you want to reboot your system' systemctl reboot ;;
    Shutdown) ConfirmPrompt 'Do you want to shutdown your system' systemctl shutdown ;;
  esac

  EOF