id: qogir-gtk-theme
version: 2024-05-22
about: A flat design theme for GTK
merge: [ elements/include/theme.inc ]

variables:
  strip: false

build-depends:
  - components/sassc.yml

sources:
  - qogir-gtk-theme-%{version}.tar.gz::https://github.com/vinceliuice/Qogir-theme/archive/refs/tags/%{version}.tar.gz

script: |
  
  cat > src/_sass/_colors.scss << "EOF"
  @import 'tweaks-temp';

  $base_color: if($variant =='light', %{background_color}, %{foreground_color});
  $text_color: if($variant =='light', %{foreground_color}, %{background_color});
  
  $bg_color: $base_color;
  $fg_color: $text_color;

  $alt_base_color: darken($base_color, 5%);
  $sec_base_color: darken($base_color, 10%);
  
  $alt_bg_color: darken($bg_color, 5%);
  $sec_bg_color: darken($bg_color, 10%);

  $alt_fg_color: darken($fg_color, 5%);
  $sec_fg_color: darken($fg_color, 10%);

  $selected_bg_color: if($variant =='light', %{background_selected_color}, %{foreground_selected_color});
  $selected_fg_color: if($variant =='light', %{foreground_selected_color}, %{background_selected_color});

  
  $alt_selected_bg_color: lighten($selected_bg_color, 5%);
  $sec_selected_bg_color: darken($selected_bg_color, 10%);
  $alt_selected_fg_color: rgba($selected_fg_color, 0.75);
  $sec_selected_fg_color: rgba($selected_fg_color, 0.6);

  $selection_mode_bg: if($trans == 'true', rgba($selected_bg_color, 0.95), $selected_bg_color);
  $selection_mode_fg: $selected_fg_color;
  $warning_color: %{warning_color};
  $error_color: %{error_color};
  $warning_fg_color: %{background_color};
  $error_fg_color: %{background_color};
  $success_color: %{success_color};
  $destructive_color: #F04A50;
  $suggested_color: $selected_bg_color;
  $destructive_fg_color: $error_color;
  $suggested_fg_color: %{background_color};
  $drop_target_color: $warning_color;
  $progress_color: $selected_bg_color;

  $borders_color: %{border_color};
  $alt_borders_color: darken($borders_color, 0.05);
  $solid_borders_color: mix($borders_color, $base_color, 12%);
  $highlight: %{highlight_color};
  $alt_highlight_color: darken(%{highlight_color}, 0.2);
  $undershoot_shade_color: darken($borders_color, 0.05);

  $link_color: darken($selected_bg_color, 10%);
  $link_visited_color: darken($text_color, 5%);

  //insensitive state derived colors
  $insensitive_fg_color: if($variant == 'light', transparentize($fg_color, 0.45), transparentize($fg_color, 0.55));
  $insensitive_bg_color: lighten($bg_color, 2%);

  $header_bg: $base_color;
  $header_bg_backdrop: lighten($header_bg, 1.5%);
  $header_border: $borders_color;

  $header_fg: $text_color;
  $alt_header_fg: mix($header_fg, $header_bg, 75%);

  $dark_sidebar_bg: $base_color;
  $dark_sidebar_fg: $text_color;

  $alt_dark_sidebar_fg: if($variant == 'light', darken($dark_sidebar_fg, 10%), lighten($dark_sidebar_fg, 10%));

  $dark_sidebar_icon_bg: if($variant =='light', %{background_secondary_color}, %{foreground_secondary_color});
  $dark_sidebar_icon_fg: if($variant =='light', %{foreground_secondary_color}, %{background_secondary_color});

  $dark_sidebar_border: if($variant == 'light', darken($dark_sidebar_bg, 10%), lighten($dark_sidebar_bg, 8%));

  $osd_fg_color: if($variant =='light', %{foreground_secondary_color}, %{background_secondary_color});
  $osd_bg_color: if($variant =='light', %{background_secondary_color}, %{foreground_secondary_color});

  $osd_button_bg: lighten($osd_bg_color, 5%);
  $osd_button_border: lighten($osd_bg_color, 12%);

  $osd_entry_bg: lighten($osd_bg_color, 5%);
  $osd_entry_border: lighten($osd_bg_color, 12%);

  $osd_insensitive_bg_color: darken($osd_bg_color, 3%);
  $osd_insensitive_fg_color: mix($osd_fg_color, opacify($osd_bg_color, 1), 30%);
  $osd_borders_color: $osd_button_border;

  $menu_bg: if($variant=='light', $base_color, $bg_color);

  $panel_bg: $osd_bg_color;
  $panel_fg: $osd_fg_color;

  $dash_bg: $dark_sidebar_icon_bg;
  $dash_fg: $osd_fg_color;

  $entry_bg: if($variant=='light', $base_color, lighten($base_color, 0%));
  $entry_border: $borders_color;

  $header_entry_bg: darken($header_bg, 3%);
  $header_entry_border: if($titlebar == 'light', rgba(black, 0.12), rgba(white, 0.12));

  $button_bg: if($variant == 'light', lighten($bg_color, 2%), lighten($base_color, 2%));
  $button_border: $entry_border;

  $header_button_bg: if($titlebar == 'dark' or $variant == 'dark', rgba(lighten($header_bg, 22%), 0.4), rgba($button_bg, 0.9));
  $header_button_border: if($titlebar == 'dark' or $variant == 'dark', rgba(darken($header_bg, 12%), 0.4), rgba($header_fg, 0.3));

  //WM Buttons

  $wm_borders: if($variant == 'light', darken($base_color, 35%), darken($base_color, 10%));

  // Close
  $wm_button_close_bg: %{error_color};
  $wm_button_close_hover_bg: lighten($wm_button_close_bg, 2%);
  $wm_button_close_active_bg: darken($wm_button_close_bg, 2%);

  $wm_icon_close_bg: $bg_color;

  // Minimize, Maximize
  $wm_button_hover_bg: $selected_bg_color;
  $wm_button_active_bg: darken($selected_bg_color, 2%);
  $wm_button_hover_border: lighten($selected_bg_color, 2%);

  $wm_icon_bg: $wm_button_hover_bg;
  $wm_icon_unfocused_bg: $wm_button_hover_bg;
  $wm_icon_hover_bg: $wm_button_hover_border;
  $wm_icon_active_bg: $wm_button_active_bg;

  EOF

  ./parse-sass.sh
  [ ! -f ./src/gtk/theme-3.0/gtk.css ] && {
    echo "failed to generate theme"
    exit 1
  }

  mkdir -p %{install-root}/%{datadir}/themes/
  ./install.sh -d %{install-root}/%{datadir}/themes/ \
    --tweaks square
