id: picom
version: 12.5
about: X compositor that may fix tearing issue
sources:
  - picom-%{version}.tar.gz::https://github.com/yshui/picom/archive/refs/tags/v%{version}.tar.gz

post-script: |-
  install -vDm 0644 /dev/stdin %{install-root}%{sysconfdir}/xdg/picom.conf << "EOF"
  shadow = true;
  shadow-radius = 7;
  shadow-offset-x = -7;
  shadow-offset-y = -7;

  fading = true;
  fade-in-step = 0.03;
  fade-out-step = 0.03;

  frame-opacity = 0.7;

  corner-radius = 0;

  blur: {
    method = "gaussian";
    size = 10;
    deviation = 2.5;
  }

  backend = "glx";

  vsync = true;

  detect-rounded-corners = true;
  detect-client-opacity = true;
  detect-transient = true;
  use-damage = true;

  rules: ({
    match = "window_type = 'tooltip'";
    fade = false;
    shadow = true;
    opacity = 0.75;
    full-shadow = false;
    blur-background = false;
    }, {
    match = "window_type = 'dropdown_menu' || "
            "window_type = 'popup_menu' || "
            "window_type = 'utility'";
      shadow = false;
    }, {
      match = "window_type = 'dock'    || "
              "window_type = 'desktop' || "
              "_GTK_FRAME_EXTENTS@";
      blur-background = false;
    }, {
      match = "window_type != 'dock'";
      # shader = "my_shader.frag";
    }, {
      match = "window_type = 'dock' || "
              "window_type = 'desktop'";
      corner-radius = 0;
    }, {
      match = "name = 'Notification'   || "
              "class_g = 'Conky'       || "
              "class_g ?= 'Notify-osd' || "
              "class_g = 'Cairo-clock' || "
              "_GTK_FRAME_EXTENTS@";
      shadow = false;
    }, {
      match = "name = 'Whisker Menu'";
      shadow = false;
      animations = ({
        triggers = [ "open", "show" ];
      preset = "slide-in";
      direction = "down";
      }, {
      triggers = [ "close", "hide" ];
      preset = "slide-out";
      direction = "down";
    }, {
      match = "MANUAL@ != 1";
      animation = ({
          triggers = ["geometry"];
          preset = "geometry-change";
          duration = 0.16;
      });
    });
  })

  animations = ({
    triggers = [ "open", "show" ];
    opacity = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.1;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.23;
      start = 0.93;
      end = 1;
    };
    scale-y = "scale-x";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }, {
    triggers = [ "close", "hide" ];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.45;
      start = 1;
      end = 0.93;
    };
    scale-y = "scale-x";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }, {
    triggers = [ "geometry" ];
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.45;
      start = "window-width-before / window-width";
      end = 1;
    };
    scale-y = {
        curve = "cubic-bezier(0,0,0,1.28)";
        duration = 0.45;
        start = "window-height-before / window-height";
        end = 1;
    };
    scale-y-reverse = {
        curve = "cubic-bezier(0,0,0,1.28)";
        duration = 0.45;
        start = "window-height / window-height-before";
        end = 1;
    };
    offset-x = {
        curve = "cubic-bezier(0,0,0,1.28)";
        duration = 0.45;
        start = "window-x-before - window-x";
        end = 0;
    };
    offset-y = {
        curve = "cubic-bezier(0,0,0,1.28)";
        duration = 0.45;
        start = "window-y-before - window-y";
        end = 0;
    };
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  })



  EOF

depends:
  - components/hicolor-icon-theme.yml
  - components/libconfig.yml
  - components/dbus.yml
  - components/libev.yml
  - components/pcre.yml
  - components/pixman.yml
  - components/mesa.yml
  - components/libepoxy.yml
  - components/libglvnd.yml
  - components/x11/xcb-util-image.yml
  - components/x11/xcb-util-renderutil.yml

build-depends:
  - components/uthash.yml
  - components/meson.yml
